@using Microsoft.AspNetCore.Components.Web
@inject IJSRuntime JS

@* Filename: ImageInput.razor
Part of Project: PLOT

File Purpose:
The purpose of this file is be a resubable ImageInput component throughout
the PLOT application. The ID and text can be set dynamically through parameters.
You can drag and drop an image or you can click on the box to upload an image.

Program Purpose:
The purpose of PLOT is to allow users to easily create, manage, 
and allocate floorsets for Platos Closet. 

Author: Danielle Smith (2/10/2025)  *@

<div class="ImageInput drag-drop-box dashed-border" id="@Id" style="width: @Width; height: @Height">
    <h5 class="text-decoration-underline my-auto text-center">
        <i class="fa-solid fa-image"></i> @Label
    </h5>
    <input type="file" id="@($"{Id}-fileInput")" class="d-none" onchange="onImageSelected(event, '@Id')">
</div>

@code {
    // text for the label - defaults to 'Upload Image'
    [Parameter, EditorRequired] public required string Label { get; set; } = "Upload Image";
    [Parameter, EditorRequired] public required string Id { get; set; } // element ID
    [Parameter] public string? Class { get; set; } // string of classes (nullable)
    [Parameter] public string? Width { get; set; } // width of the drag/drop area (nullable)
    [Parameter] public string? Height { get; set; } // height of the drag/drop area (nullable)

    // call javascript method to initialize input with the proper Id
    // when the component is first loaded. the other way i was doing it 
    // the Id did not have proper string escaping so it would bug out
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initializeImageInput", Id);
        }
    }
}
