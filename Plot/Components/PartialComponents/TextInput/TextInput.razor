@code {
    [Parameter] public string Value { get; set; } = "";
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public string ID { get; set; } = "";
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public string Placeholder { get; set; } = "";
    [Parameter] public bool IsError { get; set; } = false;

    private string GetInputClass() => IsError ? $"{Class} border-red-500 text-red-500" : Class;

    private async Task OnInput(ChangeEventArgs e)
    {
        // Do not modify Value directly, instead notify the parent
        await ValueChanged.InvokeAsync(e.Value?.ToString() ?? "");
    }
}

<input id="@ID" class="TextInput @GetInputClass()" placeholder="@Placeholder" @oninput="OnInput" value="@Value" />

@if (IsError)
{
    <p class="text-red-500 text-sm">Please enter data</p>
}
