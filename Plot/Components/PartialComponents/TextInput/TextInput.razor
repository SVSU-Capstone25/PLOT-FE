@inject IJSRuntime JSRuntime

<script>
    function handleValueChanged(element)
    { 
        console.log(element); // so this gets the entire element for some reason. 
        // it looks like this in dev console
        // <input id="usernameTop" type="text" value onchange="handleValueChanged (usernameTop)" placeholder="Enter your username" class="TextInput "b-764kiuodh9>
        if (!element.value)
        {
            element.style.color = 'red';
            element.style.bordercolor = 'red';
        }
        else {
            element.style.color = '';
            element.style.bordercolor= '';
        }
        // you can just grab the element and then set the styles like this for example
        // document.getElementById("about").style.color = 'blue'; (makes the text blue)

        // you can grab the value and check the length of it like this
        // element.value.length
        console.log(element.value.length);
    }
</script>

<div class="text-input-container @(LabelOnTop == true ? "label-top" : "label-left")">
    <label for="@Id">@Label</label>
    <input id="@Id" type="text" value="@Value" onchange="handleValueChanged(@Id)" placeholder="@Placeholder" class="TextInput @Class" />
</div>

@code {
    [Parameter] public string? Label { get; set; } = "Enter text";
    [Parameter] public string? Placeholder { get; set; } = "Type here...";
    [Parameter] public string? Value { get; set; } = "";
    [Parameter] public string? Id { get; set; }
    [Parameter] public string? Class { get; set; }
    [Parameter] public bool? LabelOnTop { get; set; } = true;
}