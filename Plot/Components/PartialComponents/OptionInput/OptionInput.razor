<div class="OptionInput @Class" id="@ID">
    <h5 class="row">
        @if(iconString == null)
        {
            @((MarkupString)_blankIcon)
        }
        else
        {
            <i class="col-auto @iconString"></i>
        }
        <p class="col-md-11">
            @label
        </p>
    </h5>
    <div class="row">
        @((MarkupString)_blankIcon)
        @if (optionsText.Count != optionsValues.Count)
        {
            <p>Error - Option and Value counts mismatched.</p>
        }
        else if (optionsText.Count < 1)
        {
            <p>Error - No options passed to this OptionInput component.</p>
        }
        else{
            <select class="col-md-11 px-0">
            @for (var i = 0; i < optionsValues.Count; i++)
            {
                <option value=@optionsValues[i]>@optionsText[i]</option>
            }
            </select>
        }
    </div>
</div>

@code
{
    //Custom string to add to this item's HTML class
    [Parameter]
    public String? Class {get; set;}

    //Custom string to add to this item's HTML id tag
    [Parameter]
    public String? ID {get; set;}

    //String reference to a FontAwesome icon to display next to the label.
    [Parameter]
    public String? iconString {get; set;}

    //Insert this string as markup to space elements correctly, when no icon is specified.
    private String _blankIcon = """<i class="col-auto fa-solid fa-square" style="opacity: 0%;"></i>""";

    //Text to display above the text box area
    [Parameter, EditorRequired]
    public required String label {get; set;}

    //Array of option values in the selector.
    [Parameter, EditorRequired]
    public required List<String> optionsValues {get; set;}

    //Array of options to display as text in the selector.
    [Parameter, EditorRequired]
    public required List<String> optionsText {get; set;}
}
