@* Quick page to test Authentication of endpoints
   This can be used as a refrence on how to access
   BE endpoints and how to use AuthHttpClient *@
@* THIS CLASS WAS MAINLY USED TO TEST THE AUTH ATRIBUTE
    THATS WHY EVERYTHING IS A COPY *@
@page "/test-auth-attr"
@attribute [Authorize(Policy = "Owner")] 
@using Microsoft.AspNetCore.Authorization
@using System.Net.Http.Headers
@inject HttpClient Client
@inject AuthHttpClient AuthHttpClient
<PageTitle>TestAuth</PageTitle>

<h1>Hello Auth</h1>

<body class="background">
    <div class="login">
        <form class="body-content" onsubmit="@AuthTest">
            
            <Button Class="Button" Id="buttonFail" Variant="primary" Icon="" Type="submit" IsDisabled=false
                TextAlignment="center">
                AuthTest
            </Button>
            
        </form>
        <form class="body-content" onsubmit="@TalkToEndpoint">
            
            <Button Class="Button" Id="buttonPass" Variant="primary" Icon="" Type="submit" IsDisabled=false
                TextAlignment="center">
                TalkToEndpoint
            </Button>
            
        </form>
        <div class="footer-content">
        </div>
    </div>
</body>


@code
{
    private void AuthTest()
    {   //Set the kind of htpMethod
        //AuthHttpClient.httpMethod=HttpMethod.Post;
        //The endpoint of the api, can be found in BE Controllers
        //AuthHttpClient.endPointStr="/authtest/auth-test";
        //Send and wait for the response
        var response = "";//await AuthHttpClient.SendAsyncWithAuth();

        Console.WriteLine(response);
    }

    private void TalkToEndpoint()
    {
        //Set the kind of htpMethod
        //AuthHttpClient.httpMethod=HttpMethod.Post;
        //The endpoint of the api, can be found in BE Controllers
        //AuthHttpClient.endPointStr="/authtest/data-test";
        // When sending in data to the api bind to the model the api is useing
        // Model can be found in BE /Data/Models
        //AuthHttpClient.jsonBody= JsonContent.Create(new
        //    {
        //        EmailAddress = "Example@example"
        //    }
        //);
        //Wait response
        //var response = await AuthHttpClient.SendAsyncWithAuth();
        
        //get it back as json
        //var json = await response.Content.ReadAsStringAsync();

        Console.WriteLine("json");
        //Looks like: {"emailAddress":"new@email.com"}

    }
}