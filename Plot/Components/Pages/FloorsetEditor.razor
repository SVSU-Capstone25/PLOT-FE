@page "/floorset-editor"
@using Plot.Components.PartialComponents.SlideOut
@rendermode InteractiveServer
@inject IJSRuntime JS

@* 
https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js
https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.0/TweenMax.min.js
https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.0/utils/Draggable.min.js
 *@

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.0/TweenMax.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.19.0/utils/Draggable.min.js"></script>
<!-- Grid Area -->


<div id="container">                
    <div class="box"></div>
</div>



<SlideOut Id="FloorsetSlideOut">
    <!-- Header -->
    <div class="sidebar-header p-3">
        <div class="d-flex align-items-center justify-content-between">
            <h5 class="mb-0"> Add Fixture </h5>
            <div class="d-flex gap-2">
                <button class="btn btn-sm btn-light">
                    <i class="bi bi-gear"></i>
                </button>
                <button class="btn btn-sm btn-light">
                    <i class="bi bi-bell"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Search Bar -->
    <div class="p-3 mb-2 border-bottom">
        <div class="d-flex align-items-center mb-2">
            
                <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                <button class="filter-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
                    <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5"/>
                </svg>
                </button>            
            
        </div>
        <div class="align-items-center mt-3 d-flex">
            <button type="button" class="btn btn-primary btn-lg w-100">Add Fixture</button>
        </div>
            
    </div>


    <!-- Fixture Area -->
    <div class="p-3 mt-3 d-flex flex-column mb-2">
        
        
            @for (int i = 0; i < 3; i++) 
            {                
                <div class="fixture mb-3 d-flex flex-row" @ondragstart="OnDragStart" draggable="true" @ondragstart:preventDefault="true">
                    <div class="drag-start-area d-flex flex-row" >
                        <img class="fixture-img disable-select grab-cursor" src="img/LayoutPhotoExample.png" alt="">
                        <p class="fixture-text m-2 disable-select grab-cursor">Two Way Rack</p>                    
                    </div>
                    <button class="fixture-options ms-auto disable-select">
                        <i class="fa-solid fa-ellipsis-vertical"></i>
                    </button>
                </div>
            }
            
            
       
    </div>    
    
</SlideOut>

<script>
    var container = document.getElementById("container");
    var box = document.querySelector(".box");
    

    var width = 50;
    var height = 50;
    var rows = 48;
    var cols = 48;
    var snap = 50;

    document.getElementById("container").style.height = (width * rows) + "px";
    document.getElementById("container").style.width = (width * rows) + "px";
    
    for (var i = 0; i < rows * cols; i++) {
        var y = Math.floor(i / cols) * height;
        var x = i * width % (cols * width);
        $("<div class=\"grid-cell\"></div>").css({ top: y, left: x, position: "absolute" }).prependTo(container);
    }
    Draggable.create(box, {
            bounds: container,
            onDrag: onDrag });

    function createDraggable(event) {
        
        console.log("Here");
        var newBox = document.createElement("div");

        document.querySelector("#container").appendChild(newBox);

        newBox.className = "box";     
        newBox.style.position = "absolute";   
        
        var mouse_x = event.clientX;
        var mouse_y = event.clientY;

        var div_x = mouse_x - (width / 2);
        var div_y = mouse_y - (height / 2);

        newBox.style.left = div_x + "px";
        newBox.style.top = div_y + "px";

        

        console.log(newBox.style.left );
    }
    



    function onDrag() {

        TweenLite.to(box, 0.5, {
            x: Math.round(this.x / snap) * snap,
            y: Math.round(this.y / snap) * snap,
            ease: Back.easeOut.config(2) });

    }
</script>

@code {
    private void OnDragStart(DragEventArgs e) {
        Console.WriteLine("In OnDragStart");
        JS.InvokeVoidAsync("createDraggable",e);
    }
}