/* Ensures that the container aligns the numeric inputs horizontally */
.horizantal-inputs {
    display: flex; /* Align children horizontally */
    align-items: center; /* Ensure inputs align to the center vertically */
    gap: 10px; /* Adds space between the inputs and separator */
    flex-wrap: nowrap; /* Prevents wrapping and forces inputs to stay on the same line */
    font-size: 10px;
}

.header {
    text-decoration: underline;
}

/* Ensures the numeric input containers align properly */
.numeric-input-container {
    display: flex;
    flex-direction: column;
    flex-grow: 1; /* Ensures that each input takes equal width */
    min-width: 0; /* Prevents the container from shrinking too small */
    position: relative;
}

/* Style for the numeric input label, input field, and description */
.numeric-input-container .label {
    margin-bottom: 5px;
    font-weight: bold;
    display: block;
}

/* Ensures that inputs have consistent height */
.numeric-input-container .input-number {
    height: 40px; /* Ensures a consistent height for the input field */
    padding: 8px; /* Adds padding for better visual */
    width: 100%; /* Ensures that the input field takes up the full width of the container */
    margin-bottom: 5px; /* Optional margin for spacing between input and description */
}

/* Error message styles */
.numeric-input-container .error {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    color: red;
    font-size: 12px;
    display: none; /* Initially hidden */
}

/* If there's an error, we show the error message */
.numeric-input-container.has-error .error {
    display: block;
}

/* Separator X */
.dimension-separator {
    font-size: 24px;
    font-weight: bold;
    align-self: center; /* Centers the separator in the middle of the inputs */
}

/* Ensures the numeric input container has consistent height */
.numeric-input-container.has-error {
    min-height: 160px; /* Increase height to accommodate the error message */
}

/* To remove the error message if no error */
.numeric-input-container:not(.has-error) .error {
    display: none;
}

.button-green {
    background-color: rgb(27, 176, 27);
}

/* Slide-out container with padding */
.slide-out-container {
    padding: 20px; /* Adds padding around the entire container */
}

/* Expanded container inside SlideOut */
.expanded-container {
    padding: 20px; /* Adds padding inside the expanded container */
}

/* Expanded container inside SlideOut */
.button-with-spacing {
    padding: 20px; /* Adds padding inside the expanded container */
}

/* Ensure that inputs and buttons also have space around them */
.numeric-input-container {
    margin-bottom: 15px; /* Adds space between numeric inputs */
}

/* Ensure horizontal inputs are spaced out as well */
.horizantal-inputs {
    display: flex;
    gap: 10px; /* Adds space between the inputs */
    align-items: center; /* Aligns the inputs vertically in the center */
}

/* Add padding to header text */
.header {
    padding: 10px 0; /* Adds space above and below the header */
    font-weight: bold;
    text-decoration: underline;
    cursor: pointer;
}

/* Style for the button to ensure spacing */
.Apply.button-green {
    margin-top: 15px; /* Adds space above the Apply button */
    padding: 10px 20px; /* Adds internal padding to the button */
}
