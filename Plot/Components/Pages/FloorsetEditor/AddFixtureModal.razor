@inject IJSRuntime JS

@* Add Fixture Modal *@
@{
    <Modal class="modal-xl fixture-modal" id="addFixture">
        <ModalHeader Title="Add Fixture" />
        <EditForm Model="AddFixtureModel" OnValidSubmit="OnAddFixtureSubmit">
            <ModalBody>
                <label>
                    Name
                    <InputText @bind-value="AddFixtureModel!.NAME">Three Way Rack</InputText>
                </label>
                <div class="row">
                    <div class="col-md-5">
                        <label>
                            Length
                            <InputNumber @bind-Value="AddFixtureModel!.HEIGHT" class="dimension" step=1 />
                        </label>
                    </div>
                    <div class="col-md-auto my-auto">
                        <i class="fa-solid fa-xmark mx-auto mt-4 ms-3"></i>
                    </div>
                    <div class="col-md-5">
                        <label>
                            Width
                            <InputNumber @bind-Value="AddFixtureModel!.WIDTH" class="dimension" step=1 />
                        </label>
                    </div>
                </div>

                <label>
                    Linear Feet Capacity
                    <InputNumber @bind-Value="AddFixtureModel!.LF_CAP" />
                </label>

                <label>
                    Total Linear Feet
                    @AddFixtureModel!.WIDTH * @AddFixtureModel!.HEIGHT
                    @* <InputNumber @bind-Value="TotalLinearFeet" disabled /> *@
                </label>

                @* <div class="img-input">
                    <ImageInput Height="400px" Width="400px" Label="Fixture Image" Id="add-fixtureimg" />
                </div> *@

                <InputFile />
            </ModalBody>
            <ModalFooter>
                <Button class="btn add-btn ms-auto" Variant="primary" type="submit">Add</Button>
            </ModalFooter>
        </EditForm>
    </Modal>
}

@code {

    @* [Parameter] public EventCallback UpdateFixtures { get; set; } *@

    // private int TotalLinearFeet = 0;

    [SupplyParameterFromForm] private Data.Models.Fixtures.CreateFixtureModel? AddFixtureModel { get; set; }

    protected override void OnInitialized()
    {
        AddFixtureModel ??= new();
    }

    public async Task OnAddFixtureSubmit()
    {
        await Task.Run(() => Console.WriteLine("Add Fixture"));

        // TODO: Change User.TUID to store ID
        @* if (AddFixtureModel != null)
        {
            var response = await FixturesHttpClient.CreateFixtureModel(User.TUID, AddFixtureModel);
            await UpdateFixtures.InvokeAsync();
        } *@
    }
}