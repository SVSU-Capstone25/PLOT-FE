<ModalBody>
    <div class="d-flex flex-row gap-2">
        <div class="d-flex flex-column gap-2">
            <label class="w-100 d-flex gap-2">
                <span class="fw-bold">Name</span>
                <InputText class="form-control" type="text" @bind-value="AddUpdateFixtureModel!.NAME" />
                <div class="text-danger">
                    <ValidationMessage For=@(() => AddUpdateFixtureModel.NAME) />
                </div>
            </label>

            <label class="w-100 d-flex my-2">
                <span class="mt-2 fw-bold">Width</span>
                <InputNumber class="w-75 form-control ms-auto" type="Number" @bind-value="AddUpdatFixtureModel!.WIDTH"
                    min="1" />
                <div class="text-danger">
                    <ValidationMessage For=@(() => AddUpdateFixtureModel.WIDTH) />
                </div>
            </label>

            <label class="w-100 d-flex my-2">
                <span class="mt-2 fw-bold">Height</span>
                <InputNumber class="w-75 form-control ms-auto" type="Number" @bind-value="AddUpdateFixtureModel!.HEIGHT"
                    min="1" />
                <div class="text-danger">
                    <ValidationMessage For=@(() => AddUpdateFixtureModel.HEIGHT) />
                </div>
            </label>


        </div>

        <div class="d-flex align-items-center">
            <ImageInput Label="Upload Image" Id="@FixtureModelId.ToString()" Height="300px"
                OnImageUpload="OnImageUpload" ImageSrc="ImageSrc" />
        </div>
    </div>
</ModalBody>

@code {
    [Parameter] public Data.Models.Fixtures.UpdateFixtureModel? AddUpdateFixtureModel { get; set; }
    [Parameter] public string? FixtureModelName { get; set; } = "";
    [Parameter] public required int FixtureModelId { get; set; }

    private string ImageSrc = "";

    protected override void OnInitialized()
    {
        if (AddUpdateFixtureModel != null)
        {
            ImageSrc = AddUpdateFixtureModel.ICON != null ?
            $"data:image/jpeg;base64,{Convert.ToBase64String(AddUpdateFixtureModel.ICON)}" : "";
        }

    }

    private async Task OnImageUpload(InputFileChangeEventArgs e)
    {
        await Task.Run(() => Console.WriteLine("Upload Image"));
        MemoryStream ms = new MemoryStream();
        await e.File.OpenReadStream().CopyToAsync(ms);
        var bytes = ms.ToArray();

        if (AddUpdateFixtureModel != null)
        {
            AddUpdateFixtureModel!.ICON = bytes;
        }
    }
}