@inject IJSRuntime JS
@inject FloorsetsHttpClient FloorsetsHttpClient
@using Plot.Components.PartialComponents.OptionInput
@using Plot.Components.PartialComponents.Checkbox
@using Plot.Components.PartialComponents.Modal

<script src="js/floorsetEditor.js"></script>

@*Print Modal *@
@*Tristan Calay *@
<Modal id="print-modal" SizeClass="modal-lg">
    <ModalHeader Title="Print Layout" Variant="standard" />
    <ModalBody>
        <h6 style="opacity: 0.5;">Select print options for how you would like your printed document to be formatted.
        </h6>
        <img class="w-100" src="/img/printpreview.png">

        @* Danielle Smith - 3/17/2025
        changed to use bootstrap classes and added some margin *@
        <div class="d-flex flex-row gap-2">
            <OptionInput id="printerInput" Class="flex-grow-1">
                <OptionInputHeader>Select a Printer</OptionInputHeader>
                <OptionInputOptions>
                    <OptionInputOption value="printer-1">Printer 1
                    </OptionInputOption>
                    <OptionInputOption value="printer-2">Printer 2</OptionInputOption>
                </OptionInputOptions>
            </OptionInput>

            <OptionInput id="pageInput" Class="flex-grow-1">
                <OptionInputHeader>Page Size</OptionInputHeader>
                <OptionInputOptions>
                    <OptionInputOption value="standard">8.5x11
                    </OptionInputOption>
                    <OptionInputOption value="a4">A4</OptionInputOption>
                </OptionInputOptions>
            </OptionInput>
        </div>

        <Checkbox id="checkWithAllocations" Text="With Allocations" />
        <Checkbox id="checkWithNotes" Text="With Notes" />
    </ModalBody>

    <ModalFooter>
        <Button Variant="primary" data-bs-dismiss="modal" isDisabled="false" OnClickFunction="printLayout">
            Print
        </Button>
    </ModalFooter>
</Modal>

@code {
    [Parameter] public required int FloorsetId { get; set; }
    public required Data.Models.Floorsets.Floorset? Floorset { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await FloorsetsHttpClient.GetFloorsetById(FloorsetId);
        if (response != null)
        {
            Floorset = response;
        }
    }

    //printLayout Task
    //Asynchronously prints the current grid layout from specified printer and options.
    //Called by the "Print" button in the print modal.
    private async Task printLayout()
    {
        //download a temporary .png file for now
        await JS.InvokeVoidAsync("downloadCanvasImage", Floorset?.NAME ?? "empty");
        Console.WriteLine("Printed floorset layout");

    }
}