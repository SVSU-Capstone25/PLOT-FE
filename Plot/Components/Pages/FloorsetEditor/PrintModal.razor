@inject IJSRuntime JS
@inject FloorsetsHttpClient FloorsetsHttpClient
@using Plot.Components.PartialComponents.OptionInput
@using Plot.Components.PartialComponents.Checkbox
@using Plot.Components.PartialComponents.Modal

<script src="js/floorsetEditor.js"></script>

@*Print Modal *@
@*Tristan Calay *@
<Modal id="printModal" SizeClass="modal-md">
    <ModalHeader Title="Print Layout" Variant="standard"/>
    <ModalBody>
        <h6 style="opacity: 0.5;">Select print options for how you would like your printed document to be formatted.
        </h6>
        <img class="w-100" src="/img/printpreview.png">

        @* Danielle Smith - 3/17/2025
        changed to use bootstrap classes and added some margin *@
        <div class="row">
            <div class="col-md-6">
                <OptionInput ID="printerInput" Class="optionInput my-3" label="Select a Printer"
                    optionsText="@(new List<String> { "Printer 1", "Printer 2" })"
                    optionsValues="@(new List<String> { "Printer 1", "Printer 2" })" />
            </div>

            <div class="col-md-6">
                <OptionInput ID="pageInput" Class="optionInput my-3" label="Page Size"
                    optionsText="@(new List<String> { "8.5x11", "A4" })"
                    optionsValues="@(new List<String> { "standard", "a4" })" />
            </div>
        </div>

        <Checkbox id="checkWithAllocations" Text="With Allocations" />
        <Checkbox id="checkWithNotes" Text="With Notes" />
    </ModalBody>

    <ModalFooter>
        <Button Variant="primary" data-bs-dismiss="modal" isDisabled="false" OnClickFunction="printLayout" >
            Print
        </Button>
    </ModalFooter>
</Modal>

@code {
    [Parameter] public required int FloorsetId {get;set;}
    [Parameter] public required Data.Models.Floorsets.Floorset Floorset {get;set;}
    
    //printLayout Task
    //Asynchronously prints the current grid layout from specified printer and options.
    //Called by the "Print" button in the print modal.
    private async Task printLayout()
    {
        if (Floorset == null)
        {
            Console.WriteLine("Floorset is null.");
            return; 
        }
        //download a temporary .png file for now
        await JS.InvokeVoidAsync("downloadCanvasImage", $"{Floorset.NAME}");
        Console.WriteLine("Printed floorset layout");
        
    }
}