@using Microsoft.Net.Http.Headers
@using Plot.Components.PartialComponents.Modal
@using Plot.Components.PartialComponents.FileInput

@inject SalesHttpClient SalesHttpClient


@*Import Excel File Modal Andrew Miller *@
<Modal id="import-excel-modal" class="modal-dialog">
    <ModalHeader Title="Import Excel File" />
    <EditForm Model="ImportExcelFileModel" OnSubmit="async () => await OnImportExcelFileSubmit()"
        FormName="Import Excel File Form">
        <ModalBody>
            <label class="w-100">
                Import an Excel File
                @if (!isUploading)
                {
                    <FileInput OnFileSelected="OnFileUpload" />
                }
                else
                {
                    <p>Uploading... please wait</p>
                }
                
            </label>
        </ModalBody>
        <ModalFooter>
            <Button TextAlignment="center" Variant="primary" type="submit" data-bs-dismiss="modal">
                Import
            </Button>
        </ModalFooter>
    </EditForm>
</Modal>

@code {
    [Parameter] public required int FloorsetId { get; set; }
    [SupplyParameterFromForm] private Data.Models.Allocations.UploadFile? ImportExcelFileModel { get; set; }

    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    private bool isUploading = false;

    protected override void OnInitialized()
    {
        ImportExcelFileModel ??= new();
    }

    private async Task OnFileUpload(IBrowserFile  e)
    {
        Console.WriteLine(e.Name);

        shouldRender=false;
        isUploading=true;
        
        
        if (e != null)
        {
            
            MemoryStream ms = new MemoryStream();
            await e.OpenReadStream().CopyToAsync(ms);
            ms.Position=0;
            
            if (ImportExcelFileModel != null)
            {
                
                ImportExcelFileModel.Stream=ms;
                ImportExcelFileModel.FileName=e.Name;
                ImportExcelFileModel.ContentType=e.ContentType;

            }
        }
    }

    private async Task OnImportExcelFileSubmit()
    {
        
        
        
        //Console.WriteLine(ImportExcelFileModel?.EXCEL_FILE==null);
        if (ImportExcelFileModel?.Stream != null)
        {
            //Console.WriteLine(ImportExcelFileModel?.EXCEL_FILE.Size);
            var response = await SalesHttpClient.UploadSales(FloorsetId, ImportExcelFileModel);
            Console.WriteLine(response);
            shouldRender=true;
            isUploading=false;
            
        }
    }
}
