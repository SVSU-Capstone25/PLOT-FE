@using Microsoft.Net.Http.Headers
@using Plot.Components.PartialComponents.Modal
@using Plot.Components.PartialComponents.FileInput

@inject SalesHttpClient SalesHttpClient


@*Import Excel File Modal Andrew Miller *@
<Modal id="importExcelModal" class="modal-dialog">
    <ModalHeader Title="Import Excel File" />
    <EditForm Model="ImportExcelFileModel" OnSubmit="async () => await OnImportExcelFileSubmit()"
        FormName="Import Excel File Form">
        <ModalBody>
            <label class="w-100">
                Import an Excel File
                <FileInput OnFileSelected="OnFileUpload" />
            </label>
        </ModalBody>
        <ModalFooter>
            <Button TextAlignment="center" Variant="primary" type="submit" data-bs-dismiss="modal">
                Import
            </Button>
        </ModalFooter>
    </EditForm>
</Modal>

@code {
    [Parameter] public required int FloorsetId { get; set; }
    [SupplyParameterFromForm] private Data.Models.Allocations.UploadFile? ImportExcelFileModel { get; set; }

    protected override void OnInitialized()
    {
        ImportExcelFileModel ??= new();
    }

    private async Task OnFileUpload(IBrowserFile e)
    {
        if (e != null)
        {
            MemoryStream ms = new MemoryStream();
            await e.OpenReadStream().CopyToAsync(ms);
            IFormFile formFile = new FormFile(ms, 0, ms.Length, e.Name, e.Name);
            if (ImportExcelFileModel != null)
            {
                ImportExcelFileModel!.EXCEL_FILE = formFile;
            }
        }
    }

    private async Task OnImportExcelFileSubmit()
    {
        if (ImportExcelFileModel?.EXCEL_FILE != null)
        {
            var response = await SalesHttpClient.UploadSales(FloorsetId, ImportExcelFileModel!.EXCEL_FILE);
            Console.WriteLine(response);
        }
    }
}
