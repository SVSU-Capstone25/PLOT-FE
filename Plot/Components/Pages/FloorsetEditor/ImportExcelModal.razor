@inject SalesHttpClient SalesHttpClient
@inject ToastService ToastService

@using Plot.Services
@using Microsoft.Net.Http.Headers
@using Plot.Components.PartialComponents.Modal
@using Plot.Components.PartialComponents.FileInput

@*Import Excel File Modal Andrew Miller *@
<Modal id="import-excel-modal" class="modal-dialog">
    <ModalHeader Title="Import Excel File" />
    <EditForm Model="ImportExcelFileModel" OnSubmit="async () => await OnImportExcelFileSubmit()"
        FormName="Import Excel File Form">
        <ModalBody>
            <label class="w-100">
                Import an Excel File
                <FileInput OnFileSelected="OnFileUpload" />
            </label>
        </ModalBody>
        <ModalFooter>
            <Button TextAlignment="center" Variant="primary" type="submit" data-bs-dismiss="modal">
                Import
            </Button>
        </ModalFooter>
    </EditForm>
</Modal>

@code {
    [Parameter] public required int FloorsetId { get; set; }
    private Data.Models.Allocations.UploadFile? ImportExcelFileModel { get; set; }

    protected override void OnInitialized()
    {
        ImportExcelFileModel ??= new();
    }

    
    /// <summary>
    /// Handles the file upload event from the FileInput component.
    /// Copies the file stream to a memory stream so it doesnt get
    /// disposed from the browser.
    /// </summary>
    /// <param name="IBrowserFile"> File input from browser</param>
    private async Task OnFileUpload(IBrowserFile e)
    {
        //Check if file is null
        if (e != null)
        {
            //Memory Stream to hold the file stream
            MemoryStream ms = new MemoryStream();
            await e.OpenReadStream().CopyToAsync(ms);
            ms.Position = 0;

            //Copy to the excel file model
            if (ImportExcelFileModel != null)
            {
                ImportExcelFileModel.Stream = ms;
                ImportExcelFileModel.FileName = e.Name;
                ImportExcelFileModel.ContentType = e.ContentType;
            }
        }
    }

    /// <summary>
    /// Handles the form submit for sending the excel file
    /// to the backend.
    /// </summary>
    private async Task OnImportExcelFileSubmit()
    {
        if (ImportExcelFileModel?.Stream != null)
        {
            // Send the floorset id and excel file to the backend
            var response = await SalesHttpClient.UploadSales(FloorsetId, ImportExcelFileModel);

            //Handle the response from the backend
            if (response != System.Net.HttpStatusCode.OK)
            {
                ToastService.ShowError("There was an error uploading the excel file!");
            }
            else
            {
                await FloorsetEditorService.TriggerExcelUpdateAsync();
                ToastService.ShowSuccess("The excel file was uploaded successfully.");
                ToastService.ShowInfo("Navigate to the allocations panel in the sidebar to start allocatiing.", 5000);
            }
        }
    }
}
