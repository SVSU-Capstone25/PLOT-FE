@using Plot.Components.PartialComponents.Modal
@using Plot.Components.PartialComponents.FileInput

@*Import Excel File Modal Andrew Miller *@
<Modal id="importExcelModal" class="modal-dialog">
    <ModalHeader Title="Import Excel File" />
    <ModalBody>
        <p>Import an Excel File</p>
        <FileInput Id="ImportFile" OnFileSelected="HandleFileSelected"></FileInput>
    </ModalBody>

    <ModalFooter>
        @*To fix: Cancel button is included in PartialComponents/Modal/Modal.razor
         but appropriate alignment still needs to be handled 
         *@

        @*Import button
        Replace HandleExcelFile with the name of the function used in final FloorsetEditor file to allocate data

        To fix: File persists when cancel button is pressed.
        *@
        <Button Variant="primary" @onclick="HandleExcelFile" TextAlignment="center">
            Import
        </Button>
    </ModalFooter>
</Modal>

@code {
    private IBrowserFile? selectedFile;

    /*
    Set selectedFile to file placed in FileInput Tool
    */
    private void HandleFileSelected(IBrowserFile file)
    {
        selectedFile = file;
    }

    // Replace below with processing from the FloorSet Grid FE task
    // Processes it
    private void ProcessExcelFile(IBrowserFile file)
    {
        //var floorsetId = 1;
        //var bufferSize = 1024 * 1024 * 10; // 10 MB
        //var content = new MultipartFormDataContent();

        //var fileStreamContent = new StreamContent(file.OpenReadStream(maxAllowedSize: bufferSize));

        //fileStreamContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);

        //content.Add(fileStreamContent, "file", file.Name);

        //var response = await SalesHttpClient.UploadSales(floorsetId, content);
    }

    // Runs when import button is pressed inside modal
    private void HandleExcelFile()
    {
        if (selectedFile == null) return;

        ProcessExcelFile(selectedFile);
    }
}