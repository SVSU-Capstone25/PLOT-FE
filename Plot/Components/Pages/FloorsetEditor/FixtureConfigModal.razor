@* @inject IJSRuntime JS *@
<!-- Author: Andrew Fulton, Andrew Kennedy
The floorset fixture config modal allows right-click editing of a fixture on the floorset grid.
It allows changing the category, hanging, and notes of a fixture.
It also allows you to delete a fixture on the grid. -->
@* Add fixture edit modal to the floorset editor. - Tristan Calay *@

<div id="fixtureContextMenu" class="dropdown-menu z-0  flex-column  justify-content-center" role="menu">
    
    <div >
        <p class="px-4 dropdown-header">Fixture Configuration</p>
        <h5 class="px-4">Two Way Rack</h5>
    </div>

    <div class="dropdown-divider"></div>

    <div class="d-flex flex-column gap-2 px-2">
        <div class="d-flex flex-row gap-2 align-items-center px-2">
                <p class="d-flex justify-content-center m-0 w-100" for="exampleFormControlSelect1">Select Category</p>
        </div>

        <OptionInput ID="categorySelectOptionInput" Class="optionInput" label=""
                    optionsText="@menuCategoryItems" optionsValues="@menuCategoryItems"
                    OnSelectFunction="SetFixtureCategory" />
    </div>
    

    <br>


    <div class="d-flex flex-column gap-2 px-2">
        <div class="d-flex flex-row gap-2 align-items-center px-2">
                <p class="d-flex justify-content-center m-0 w-100" for="exampleFormControlSelect1">Select Hanging</p>
        </div>

        <OptionInput ID="hangingSelectOptionInput" Class="optionInput" label=""
                    optionsText="@menuHangingOptions" optionsValues="@menuHangingOptions"
                    OnSelectFunction="SetFixtureHanging" />
    </div>
    

    <div class="dropdown-divider"></div>


    <div class="d-flex flex-column gap-2 px-2">
        <div class="d-flex flex-row gap-2 align-items-center px-2">
            <i class="fa-solid fa-pencil"></i>
            <p class="d-flex justify-content-center m-0">Fixture Notes</p>
        </div>
        <textarea class=" d-flex justify-self-center"  style="border: none;" placeholder="Notes">@strFixtureNotes</textarea>
    </div>




    <div class="dropdown-divider"></div>


    <div class="d-flex flex-row gap-2 align-items-center px-2 justify-content-between">
                
    
        <Button Class="Button" TextAlignment="center" Variant="danger" OnClickFunction="OnDeleteClick">Delete</Button>
        <Button Class="Button" TextAlignment="center" Variant="success" OnClickFunction="OnSaveClick">Save</Button>
    
    </div>
</div>




@code 
{
    [Parameter] public required int FloorsetId { get; set; }
    private List<string> menuCategoryItems = new List<string>{"Men's Pants", "Women's Pants", "Men's Shirts", "Women's Shirts"};
    private List<string> menuHangingOptions = new List<string>{"Single Hung", "Double Hung","Triple Hung", "Quadruple Hung"};
    [Parameter] public required string strFixtureNotes { get; set; }

    private Dictionary<string, List<Data.Models.Allocations.AllocationFulfillments>> allocationFulfillmentLists = new
    Dictionary<string, List<Data.Models.Allocations.AllocationFulfillments>>();

    

    private void SetFixtureCategory(string strSelectedOption)
    {
        Console.WriteLine("Fixture Category: "+strSelectedOption);
    }

    private void SetFixtureHanging(string strSelectedOption)
    {
        Console.WriteLine("Fixture Hanging: "+strSelectedOption);
    }

    private void OnSaveClick()
    {
        Console.WriteLine("Save this fixture");
    }

    private void OnDeleteClick()
    {
        Console.WriteLine("Delete this fixture");
    }
}

@* @code {
    private String fixtureName = "Default Fixture Title";
private List<String> categoryInputValues = new List<String> { "Default Category" };
        private List<String> hangingInputValues = new List<String> { "Default Hanging" };

                private String notesText = "";

                private Data.Models.Fixtures.FixtureInstance? currentFixture;
                public void selectFixture(Data.Models.Fixtures.FixtureInstance selectedFixture)
                {
                currentFixture = selectedFixture;
                if (selectedFixture == null)
                {
                return;
                }
                else
                {
                fixtureName = selectedFixture.;
                //TODO: Change hanging, notes and category components here.
                Console.WriteLine("Fixture Selected: " + fixtureName);
                }
                StateHasChanged();
                }

                [Parameter] public required EventCallback<int> FixtureDeleted { get; set; }

                    private void deleteCurrentFixture()
                    {
                    if (currentFixture != null)
                    {
                    Console.WriteLine("Delete Current Selected Fixture...");
                    FixtureDeleted.InvokeAsync(currentFixture.editorID);
                    JS.InvokeVoidAsync("toggleModal", "fixtureConfig", false);
                    }
                    }

                    private void saveChangesToCurrentFixture()
                    {
                    Console.WriteLine("Save Changes Function...");
                    JS.InvokeVoidAsync("toggleModal", "fixtureConfig", false);
                    }
                    } *@