@* Originally by Luke Wollenweber *@

@page "/login"

@inject NavigationManager Navigation
@inject HttpClient Client


<PageTitle>Login</PageTitle>

<body class="background">
    <div class="login">
        <form class="body-content" onsubmit="@OnLoginSubmit">
            <img src="img/PlatoLogo.png" alt="Plato's closet logo">
            <h4>Welcome to PLOT, </h4>
            <h4>Plato's Layout Optimization Tool</h4>
            <p>Please log in to your account to continue</p>
            @* Danielle Smith - 3/16/2025
                gave better ids and added some margin on the forgot password link *@
            <TextInput Id="email" Type="email" Label="Email" Placeholder="" Value="@email"
                ValueChanged="@(e => email = e)" Required="true" />
            <TextInput Id="password" Type="password" Label="Password" Placeholder="" Value="@password"
                ValueChanged="@(e => password = e)" Class="masked" Required="true" />
            <Link Id="link" Class="mb-3" Url="/recover_password">Forgot Password?</Link>
            <Button Class="Button" Id="buttonLogin" Variant="primary" Icon="" Type="submit" IsDisabled=false
                TextAlignment="center">
                Log in
            </Button>
        </form>
        <div class="footer-content">
            @if (isInvalid)
            {
                <p style="color: red; font-weight: bold;">Incorrect Email or Password</p>
            }
        </div>
    </div>
</body>

@code
{
    string email = ""; // Define the username variable
    string password = "";
    bool isInvalid = false;

    private async void OnLoginSubmit()
    {
        var loginAPIUri= new Uri(Client.BaseAddress+"/auth/login");
        
        var request = new HttpRequestMessage(HttpMethod.Post,
        loginAPIUri);
        request.Headers.Add("Accept", "application/json");

        Console.WriteLine("------------------------------------------------------------------------");
        Console.WriteLine(Client.BaseAddress);


        request.Content = JsonContent.Create(new
        {
            Email = email,
            Password = password
        });

        var response = await Client.SendAsync(request);

        Console.WriteLine(response);

        var redirectUrl = response.Headers.Location?.ToString();

        

        if (!string.IsNullOrEmpty(redirectUrl))
        {
            Navigation.NavigateTo(redirectUrl, true);
        }
        else
        {
            isInvalid = true; // Handle the error case
        }


      
    }
}
