@page "/login"
<PageTitle>Login</PageTitle>

<body class="background">
    <div class="login">
        <ModalDialog Title="Login" ModalID="loginModal" ModalLabel="loginModalLabel" ModalSize="">
            <BodyContent class="body-content">
                <img src="img/PlatoLogo.png" alt="Plato's closet logo">
                <h4>Welcome to PLOT, </h4>
                <h4>Plato's Layout Optimization Tool</h4>
                <p>Please log in to your account to continue</p>
                <TextInput Id="usernameTop" Label="Username" Placeholder="" Value="@username"/>
                <!-- #NOTE  -->
                <!-- In order for the password field to work it needs to handleValueChanged password as part of the word  -->
<!-- Password input with visibility toggle -->
                <div class="password-container">
                    <TextInput Id="passwordTop" Label="Password" Placeholder="" Value="@password" Class="masked" Type="@passwordType" />
                    <button type="button" @onclick="TogglePasswordVisibility" class="toggle-password fa-thin fa-eye">
                    </button>
                </div>                
                <Link Id="link" Class="test" Url="http://localhost:8080/recover_password">Forgot Password?</Link>
                <Button Class="Button" Id="buttonLogin" Variant="primary" OnClickFunction="ValidateInput"
                    Icon="" IsDisabled=false TextAlignment="center">
                    Log in
                </Button>
            </BodyContent>
            <FooterConent class="footer-content">
                @if (isInvalid)
                {
                    <p style="color: red; font-weight: bold;">Incorrect Email or Password</p>
                }
            </FooterConent>
        </ModalDialog>
    </div>
</body>

@code
{
    // Inject NavigationManager to redirect
    [Inject]
    NavigationManager Navigation { get; set; }
    string username; // Define the username variable
    string password;
    bool isInvalid = false;

    private void ValidateInput()
    {
        // Check if username is "temp" and redirect to localhost:8080 if true
        if (username == password)
        {
            isInvalid = false;
            // Redirect to localhost:8080
            Navigation.NavigateTo("http://localhost:8080/home");
        }
        else 
        {
            isInvalid = true;
        }
    }
     // Toggle password visibility
    private void TogglePasswordVisibility()
    {
        passwordType = (passwordType == "password") ? "text" : "password"; // Toggle the type
    }
}