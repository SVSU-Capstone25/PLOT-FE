@inject IJSRuntime JS
@using Microsoft.JSInterop

@* 
Load Message Modal - Presents a message indicating data is being updated
when a new user is added. Needed to warn user from navigating away from page

data-bs-backdrop="static" prevents closing when the user clicks outside of it
data-bs-keyboard="false" prevents closing when the user clicks the escape key

data-bs-backdrop="static" does not work on Firefox.
*@

<Modal SizeClass="modal-sm modal-dialog-centered" Backdrop="static" Keyboard="false" @attributes="Attributes">
    <Loader Class="d-flex justify-content-center w-100" />

    <p class="px-4 text-danger">Please wait while PLOT updates user information!</p>
    <p class="px-4 text-danger">Navigating away may prevent data from updating or cause a partial update!</p>
</Modal>

<script>
// Gets instance of modal. This was put here as part of enabling the functionality of this modal.
// This does not appear to be in use in the current implementation but as of (4/28/2025) deadline is
// tomorrow (4/29/2025) so I'm leaving this in just in case. - Andrew Miller
    window.getModalInstance = function (selector) {
        return window.bootstrap.Modal.getOrCreateInstance(document.querySelector(selector));
    };
</script>

@code {
    public IJSObjectReference? LoadModalRef;

    [Parameter(CaptureUnmatchedValues = true)] public required Dictionary<string, object> Attributes { get; set; }

    public async Task ShowModal()
    {
        if (LoadModalRef == null)
        {
            LoadModalRef = await JS.InvokeAsync<IJSObjectReference>("window.bootstrap.Modal.getOrCreateInstance",
            "#load-message");
        }
        await LoadModalRef.InvokeVoidAsync("show");
    }

    public async Task HideModal()
    {
        if (LoadModalRef == null)
        {
            LoadModalRef = await JS.InvokeAsync<IJSObjectReference>("window.bootstrap.Modal.getOrCreateInstance",
            "#load-message");
        }
        await LoadModalRef.InvokeVoidAsync("hide");
    }
}