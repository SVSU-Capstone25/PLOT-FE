@* Michael Polhill - 4/2/2025 *@

@page "/password-reset-request"
@attribute [AllowAnonymous]
@inject NavigationManager Navigation
@inject AuthHttpClient AuthHttpClient
@layout Plot.Components.Layout.LoginLayout
@inject ToastService ToastService

@using Plot.Services
@using Plot.Data.Models.Auth.ResetPassword
@using Microsoft.AspNetCore.Authorization

<PageTitle>Password Reset Request</PageTitle>

<body class="background">
    <div class="bg-white p-5 rounded-2">
        <EditForm class="d-flex flex-column gap-3" Model="PasswordResetRequestModel"
            OnValidSubmit="OnPasswordResetSubmit">
            <DataAnnotationsValidator />
            <img src="img/PlatoLogo.png" alt="Plato's closet logo">
            <h4>Forgot your password?</h4>
            <p>Enter your email to receive a password reset link</p>
            <div class="input-group">
                <label class="form-label w-100">
                    Email:
                    <InputText class="form-control" id="email" type="text"
                        @bind-Value="PasswordResetRequestModel!.EMAIL" />
                </label>
                <div class="invalid-feedback d-block">
                    <ValidationMessage For="() => PasswordResetRequestModel!.EMAIL" />
                </div>
            </div>
            <Button Variant="primary" TextAlignment="center" type="submit">
                Send Reset Email
            </Button>
            <a class="btn btn-primary" href="/login">
                Return To Login
            </a>
        </EditForm>
    </div>
</body>

@code
{
    [SupplyParameterFromForm]
    private Data.Models.Auth.ResetPassword.ResetPasswordRequest? PasswordResetRequestModel { get; set; }

    protected override void OnInitialized()
    {
        PasswordResetRequestModel ??= new();
    }

    private async Task OnPasswordResetSubmit()
    {
        if (PasswordResetRequestModel == null)
        {
            ToastService.ShowError("There was an error sending the password reset email!");
            return;
        }

        await AuthHttpClient.ResetPasswordRequest(PasswordResetRequestModel);

        ToastService.ShowSuccess($"A password reset email was sent to {PasswordResetRequestModel.EMAIL}.");
    }
}