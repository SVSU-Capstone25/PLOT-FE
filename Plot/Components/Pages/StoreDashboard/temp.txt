@* + Add Store button fixed to the bottom right of the screen *@
<div class="fixed-bottom-right">
    @* add store button that brings up the Add Store modal *@
    <Button Class="Test Button" TextAlignment="center" Variant="primary" OnClickFunction="ShowAddStoreModal"
        Icon="fa-solid fa-plus">
        Add Store
    </Button>
</div>

<Modal id="addStoreModal" class="modal-dialog modal-lg">
    <ModalHeader Title="Add Store" />
    <ModalBody>
        <h5>Add Store</h5>
        <p>Add a new store with it's own unique store blueprint.</p>

        <div class="container">
            <div class="row">

                @* left side of the modal *@
                <div class="col-md-6">
                    @* name *@
                    <div class="row">
                        <label>
                            Name
                            <InputText class="w-100" id="addModalStoreName" placeholder="Name" type="Text"
                                @bind-value="@storeToAdd.Name" />
                        </label>
                        <p class="error">@nameErrorAdd</p>
                    </div>

                    @* address *@
                    <div class="row">
                        <label>
                            Address
                            <InputText class="w-100" id="addModalStoreAddress" placeholder="Address"
                                @bind-value="@storeToAdd.Address" />
                        </label>
                        <p class="error">@addressErrorAdd</p>
                    </div>

                    @* city *@
                    <div class="row">
                        <label>
                            City
                            <InputText class="w-100" id="addModalStoreCity" placeholder="City"
                                Value="@storeToAdd.City" />
                        </label>
                        <p class="error">@cityErrorAdd</p>
                    </div>

                    @* state and zip *@
                    <div class="row">
                        <div class="col">
                            @* holds the store state *@
                            <label>
                                State
                                <InputText class="w-100 small-textInput" id="addModalStoreState" Label="State"
                                    @bind-value="@storeToAdd.State" max="25" />
                            </label>
                            <p class="error">@stateErrorAdd</p>
                        </div>

                        <div class="col">
                            @* holds the store zip *@
                            <label>
                                Zip
                                <InputText class="w-100 small-textInput" id="addModalStoreZip" placeholder="Zip"
                                    value="@storeToAdd.Zip" Max="5" />
                            </label>
                            <p class="error">@zipErrorAdd</p>
                        </div>

                    </div>


                    @* <div class="row">
                        <p class="error">@stateErrorAdd</p>
                        <p class="error">@zipErrorAdd</p>
                    </div> *@


                    @* height and width *@
                    <div class="row">
                        <div class="col">
                            <NumericInput Class="w-100 small-textInput" Id="addModalStoreLength" Label="Length"
                                Placeholder="20ft" Description="" Value="@storeToAdd.Length"
                                ValueChanged="@ValidateLengthAdd" />
                            <p class="error">@heightErrorAdd</p>
                        </div>

                        <div class="col">
                            <NumericInput Class="w-100 small-textInput" Id="addModalStoreWidth" Label="Width"
                                Placeholder="50ft" Description="" Value="@storeToAdd.Width"
                                ValueChanged="@ValidateWidthAdd" />
                            <p class="error">@widthErrorAdd</p>
                        </div>
                    </div>

                </div>

                @* right side of the modal *@
                <div class="col d-flex justify-content-center">
                    @* holds store image *@
                    <ImageInput Label="Upload Image" Id="addModalStoreBlueprint" Width="330px" Height="300px" />
                    <p class="error">@blueprintErrorAdd</p>
                </div>
            </div>


        </div>


        @* Employees section*@
        <h5>Employees</h5>
        <div id="employeesAdd" class="horizontal-items">
            <div id="addStoreAddUserDiv" class="circle-container">
                <button class="circle btn-style" @onclick="ShowAddUserAddStoreModal"><i
                        class="fa-solid fa-plus"></i></button>
                <p class="circle-name">Add Employee</p>
            </div>
        </div>
    </ModalBody>

    <ModalFooter>
        <Button Class="Test Button" TextAlignment="center" Variant="primary" OnClickFunction="AddStore"
            IsDisabled="@isAddDisabled">Add
            Store</Button>
    </ModalFooter>
</Modal>

@* Edit Store modal *@
<Modal id="editStoreModal" class="modal-dialog modal-lg">
    <ModalHeader Title="Edit Store" />
    <ModalBody>
        <h5>Edit Store</h5>
        <p>Edit a store's information</p>
        @* Name and location (labels and input boxes)*@

        <div class="row">
            @* left side of modal *@
            <div class="col">
                @* Name *@
                <div class="row">
                    <label>
                        Name
                        <InputText class="w-100" id="editModalStoreName" placeholder="Name" type="Text"
                            @bind-value="@editedStoreInfo.Name" />
                    </label>
                    <p class="error">@nameErrorEdit</p>
                </div>

                @* address *@
                <div class="row">
                    <label>
                        Address
                        <InputText class="w-100" id="editModalStoreAddress" placeholder="Address"
                            @bind-value="@editedStoreInfo.Address" />
                    </label>
                    <p class="error">@addressErrorEdit</p>
                </div>

                @* city *@
                <div class="row">
                    <label>
                        City
                        <InputText class="w-100" id="editModalStoreCity" placeholder="City"
                            @bind-value="@editedStoreInfo.City" />
                    </label>
                    <p class="error">@cityErrorEdit</p>
                </div>

                @* state and zip *@
                <div class="row">
                    @* state *@
                    <div class="col">
                        <label>
                            State
                            <InputText class="w-100 small-textInput" id="editModalStoreState" placeholder="State"
                                @bind-value="@editedStoreInfo.State" />
                        </label>
                    </div>

                    @* zip *@
                    <div class="col">
                        <label>
                            Zip
                            <InputText class="w-100 small-textInput" id="editModalStoreZip" placeholder="Zip"
                                @bind-value="@editedStoreInfo.Zip" />
                        </label>
                    </div>
                </div>

                @* state and zip error messages *@
                <div class="row">
                    <p class="error">@stateErrorEdit</p>
                    <p class="error">@zipErrorEdit</p>
                </div>

                @* height and width *@
                <div class="row">
                    @* Length *@
                    <div class="col">
                        <NumericInput Class="w-100 small-textInput" Id="editModalStoreLength" Label="Length"
                            Placeholder="20ft" Description="" Value="@editedStoreInfo.Length"
                            ValueChanged="@ValidateLengthEdit" />
                        <p class="error">@heightErrorEdit</p>
                    </div>

                    @* width *@
                    <div class="col">
                        <NumericInput Class="w-100 small-textInput" Id="editModalStoreWidth" Label="Width"
                            Placeholder="50ft" Description="" Value="@editedStoreInfo.Width"
                            ValueChanged="@ValidateWidthEdit" />
                        <p class="error">@widthErrorEdit</p>
                    </div>
                </div>
            </div>

            @* right side of modal *@
            <div class="col d-flex justify-content-center">
                @* holds store image *@
                <ImageInput Label="Upload Image" Id="editModalStoreBlueprint" Width="330px" Height="300px" />
                <p class="error">@blueprintErrorEdit</p>
            </div>
        </div>


        @* Employees section*@
        <h5>Employees</h5>
        <div id="employeesEdit" class="horizontal-items">
            <div id="editStoreAddUserDiv" class="circle-container">
                <button class="circle btn-style" @onclick="ShowAddUserEditStoreModal"><i
                        class="fa-solid fa-plus"></i></button>
                <p class="circle-name">Add Employee</p>
            </div>
        </div>
    </ModalBody>

    <ModalFooter>
        @* button for updating the store *@
        <p style="margin-left: auto;"></p>
        <Button Class="Test Button" TextAlignment="center" Variant="primary" OnClickFunction="SaveChanges"
            IsDisabled="@isEditDisabled">Update
            Store</Button>
    </ModalFooter>
</Modal>



@* Add User modal for when an employee is being added to a store being created. This is trigged when the + Add Employee button is
    clicked in the Edit or Add Store modal *@
<Modal id="AddUserModalAddStore" Class="modal-dialog" onCancelFunction="ClosingAddUserModalForAddStore">
    <ModalHeader Title="Add User" />
    <ModalBody>
        <h3>Select a user to add</h3>
        @* This will be populated with the list of users from the DB
            Text is just their name for now, while value could be something like "TUID,FIRST_NAME,LAST_NAME" *@
        <OptionInput ID="AddStoreUserOptionsInput" Class="optionInput" label="Select a user to add"
            optionsText="@UserOptionsText" optionsValues="@UserOptionsValues"
            OnSelectFunction="SetUserThatWillBeAddedToAStore" />

    </ModalBody>

    <ModalFooter>
        <p style="margin-left: auto;"></p>
        <Button Class="Test Button" TextAlignment="center" Variant="primary"
            OnClickFunction="AddStoreAddNewEmployee">Add
            User</Button>
    </ModalFooter>

</Modal>

@* add new user to an existing store. This is when editing a store *@
<Modal id="AddUserModalEditStore" class="modal-dialog">
    <ModalHeader Title="Add User" />
    <ModalBody>
        <h3>Select a user to add</h3>
        @* This will be populated with the list of users from the DB
            Text is just their name for now, while value could be something like "TUID,FIRST_NAME,LAST_NAME" *@
        <OptionInput ID="EditStoreUserOptionsInput" Class="optionInput" label="Select a user to add"
            optionsText="@UserOptionsText" optionsValues="@UserOptionsValues"
            OnSelectFunction="SetUserThatWillBeAddedToAStore" />

    </ModalBody>

    <ModalFooter>
        <p style="margin-left: auto;"></p>
        <Button Class="Test Button" TextAlignment="center" Variant="primary"
            OnClickFunction="EditStoreAddNewEmployee">Add
            User</Button>
    </ModalFooter>
</Modal>