@* Filename: Stores.razor
Part of Project: PLOT

File Purpose:
This is the Stores dashboard page component

Program Purpose:
The purpose of PLOT is to allow users to easily create, manage, 
and allocate floorsets for Platos Closet. 

Author: Andrew Fulton (3/12/2025)

*@

@page "/store-dashboard"

@inject NavigationManager Navigation
@inject StoresHttpClient StoresHttpClient

@using System.Drawing;
@using System.IO;
@using Plot.Components.PartialComponents.NumericInput
@using Plot.Components.PartialComponents.Modal

<PageTitle>Store Dashboard</PageTitle>

@* Div to hold the stores *@
<div id="MainStoresDiv" class="horizontal-items">

    @* loop to generate a card for each store that exists *@
    @foreach (var store in stores)
    {
        <a href="@($"/floorsets/{store.TUID}")">
            <Card CardText="@($"{store.CITY},{store.STATE}")">
                <Dropdown Class="Test Dropdown" Id="@($"{store.NAME}{store.TUID}Dropdown")" LabelText="Store">
                    <DropdownLink Link="@($"/floorsets/{store.TUID}")" Icon="fa-solid fa-note-sticky">Floorsets
                    </DropdownLink>

                    <DropdownLink @onclick="async () => await OnEditClick(store)" Link="#editStoreModal"
                        Icon="fa-solid fa-pen-to-square" data-bs-toggle="modal">
                        Edit</DropdownLink>

                    <DropdownLink Link="@($"#delete-store-{store.TUID}")" Icon="fa-solid fa-trash-can"
                        data-bs-toggle="modal">Delete
                    </DropdownLink>
                </Dropdown>
            </Card>
        </a>


        @* Delete store modal *@
        @* <Modal id="@($"#delete-store-{store.TUID}")" class="modal-dialog">
            <ModalHeader Title="Confirm Deletion" Variant="danger" />
            <form @onsubmit="async () => await OnDeleteStoreSubmit(store.TUID)">
                <ModalBody>
                    <h5>Are you SURE you want to delete this store?</h5>
                    <input class="w-100" placeholder="If so, type DELETE below" required pattern="DELETE" />
                </ModalBody>

                <ModalFooter>
                    <Button Class="Test Button" TextAlignment="center" Variant="primary" Type="submit">Yes,
                        Delete
                    </Button>
                </ModalFooter>
            </form>
        </Modal> *@

    }
</div>

@code {
    private List<Data.Models.Stores.Store> stores = new List<Data.Models.Stores.Store>();
    [SupplyParameterFromForm]
    private Data.Models.Stores.CreateStore? createStore { get; set; }
    [SupplyParameterFromForm]
    private Data.Models.Stores.UpdatePublicInfoStore? editStore { get; set; }
    private async Task UpdateStores()
    {
        var response = await StoresHttpClient.GetListOfStores();

        if (response != null)
        {
            stores = response;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await UpdateStores();
    }

    private async Task OnEditClick(Data.Models.Stores.Store store)
    {
        await Task.Run(() => Console.WriteLine("Edit store"));

    }

    private async Task OnDeleteStoreSubmit(int storeId)
    {
        Console.WriteLine("Delete Store" + storeId);
        @* await StoresHttpClient.DeleteStore(storeId); *@
        await UpdateStores();
    }
}
